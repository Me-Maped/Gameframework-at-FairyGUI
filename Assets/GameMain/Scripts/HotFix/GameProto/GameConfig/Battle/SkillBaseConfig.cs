//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace GameConfig.Battle
{
public sealed partial class SkillBaseConfig :  Bright.Config.BeanBase 
{
    public SkillBaseConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        SkillDispID = _buf.ReadInt();
        SkillType = _buf.ReadInt();
        Desc = _buf.ReadString();
        CostMP = _buf.ReadInt();
        GCDID = _buf.ReadInt();
        SkillCD = _buf.ReadFloat();
        IsRepeatTrigger = _buf.ReadBool();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);BuffID = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); BuffID.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AttrDamageData = new System.Collections.Generic.List<Battle.SkillAttrDamageData>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { Battle.SkillAttrDamageData _e0;  _e0 = Battle.SkillAttrDamageData.DeserializeSkillAttrDamageData(_buf); AttrDamageData.Add(_e0);}}
        PostInit();
    }

    public static SkillBaseConfig DeserializeSkillBaseConfig(ByteBuf _buf)
    {
        return new Battle.SkillBaseConfig(_buf);
    }

    /// <summary>
    /// 技能ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 表现ID
    /// </summary>
    public int SkillDispID { get; private set; }
    /// <summary>
    /// 技能类型SkillType
    /// </summary>
    public int SkillType { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 消耗MP
    /// </summary>
    public int CostMP { get; private set; }
    /// <summary>
    /// 所属公CD组ID
    /// </summary>
    public int GCDID { get; private set; }
    /// <summary>
    /// 技能CD
    /// </summary>
    public float SkillCD { get; private set; }
    /// <summary>
    /// 是否重复触发
    /// </summary>
    public bool IsRepeatTrigger { get; private set; }
    /// <summary>
    /// BuffIDList
    /// </summary>
    public System.Collections.Generic.List<int> BuffID { get; private set; }
    public System.Collections.Generic.List<Battle.SkillAttrDamageData> AttrDamageData { get; private set; }

    public const int __ID__ = 2067672430;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in AttrDamageData) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in AttrDamageData) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "SkillDispID:" + SkillDispID + ","
        + "SkillType:" + SkillType + ","
        + "Desc:" + Desc + ","
        + "CostMP:" + CostMP + ","
        + "GCDID:" + GCDID + ","
        + "SkillCD:" + SkillCD + ","
        + "IsRepeatTrigger:" + IsRepeatTrigger + ","
        + "BuffID:" + Bright.Common.StringUtil.CollectionToString(BuffID) + ","
        + "AttrDamageData:" + Bright.Common.StringUtil.CollectionToString(AttrDamageData) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}