//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace GameConfig.basecorps
{
public sealed partial class basecorps :  Bright.Config.BeanBase 
{
    public basecorps(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        ShowInBag = _buf.ReadInt();
        Quality = _buf.ReadInt();
        Camp = _buf.ReadInt();
        Location = _buf.ReadInt();
        BattleImage = _buf.ReadString();
        BattleBase = _buf.ReadString();
        SmallCard = _buf.ReadString();
        SmallAvatar = _buf.ReadString();
        DebutImage = _buf.ReadString();
        DebutEffect = _buf.ReadString();
        Skill1 = _buf.ReadInt();
        Skill2 = _buf.ReadInt();
        Skill3 = _buf.ReadInt();
        Skill4 = _buf.ReadInt();
        Skill5 = _buf.ReadInt();
        Equip1 = _buf.ReadInt();
        Equip2 = _buf.ReadInt();
        Equip3 = _buf.ReadInt();
        Equip4 = _buf.ReadInt();
        ChipId = _buf.ReadInt();
        SplitChip = _buf.ReadInt();
        SynthesisChip = _buf.ReadInt();
        Attack = _buf.ReadInt();
        Defense = _buf.ReadInt();
        Life = _buf.ReadInt();
        Speed = _buf.ReadInt();
        Anger = _buf.ReadInt();
        DamageIncrease = _buf.ReadInt();
        DamageReduce = _buf.ReadInt();
        BreakArmor = _buf.ReadInt();
        BreakArmorResistance = _buf.ReadInt();
        Crit = _buf.ReadInt();
        CritEffect = _buf.ReadInt();
        Parry = _buf.ReadInt();
        Accurate = _buf.ReadInt();
        CritResistance = _buf.ReadInt();
        CritDamageResistance = _buf.ReadInt();
        SkillDamageIncrease = _buf.ReadInt();
        ControlAccurate = _buf.ReadInt();
        ControlResistance = _buf.ReadInt();
        PostInit();
    }

    public static basecorps Deserializebasecorps(ByteBuf _buf)
    {
        return new basecorps.basecorps(_buf);
    }

    /// <summary>
    /// 英雄ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 英雄名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 卡包显示0显示1不显示
    /// </summary>
    public int ShowInBag { get; private set; }
    /// <summary>
    /// 品阶
    /// </summary>
    public int Quality { get; private set; }
    /// <summary>
    /// 阵营
    /// </summary>
    public int Camp { get; private set; }
    /// <summary>
    /// 定位
    /// </summary>
    public int Location { get; private set; }
    /// <summary>
    /// 战斗卡牌立绘
    /// </summary>
    public string BattleImage { get; private set; }
    /// <summary>
    /// 战斗卡牌底
    /// </summary>
    public string BattleBase { get; private set; }
    /// <summary>
    /// 小卡牌（卡包卡牌）
    /// </summary>
    public string SmallCard { get; private set; }
    /// <summary>
    /// 小头像
    /// </summary>
    public string SmallAvatar { get; private set; }
    /// <summary>
    /// 出场立绘
    /// </summary>
    public string DebutImage { get; private set; }
    /// <summary>
    /// 出场特效
    /// </summary>
    public string DebutEffect { get; private set; }
    /// <summary>
    /// 技能ID1（普通攻击）
    /// </summary>
    public int Skill1 { get; private set; }
    /// <summary>
    /// 技能ID2
    /// </summary>
    public int Skill2 { get; private set; }
    /// <summary>
    /// 技能ID3
    /// </summary>
    public int Skill3 { get; private set; }
    /// <summary>
    /// 技能ID4
    /// </summary>
    public int Skill4 { get; private set; }
    /// <summary>
    /// 技能ID5
    /// </summary>
    public int Skill5 { get; private set; }
    /// <summary>
    /// 装备1
    /// </summary>
    public int Equip1 { get; private set; }
    /// <summary>
    /// 装备2
    /// </summary>
    public int Equip2 { get; private set; }
    /// <summary>
    /// 装备3
    /// </summary>
    public int Equip3 { get; private set; }
    /// <summary>
    /// 装备4
    /// </summary>
    public int Equip4 { get; private set; }
    /// <summary>
    /// 碎片ID
    /// </summary>
    public int ChipId { get; private set; }
    /// <summary>
    /// 拆分碎片数
    /// </summary>
    public int SplitChip { get; private set; }
    /// <summary>
    /// 合成碎片数
    /// </summary>
    public int SynthesisChip { get; private set; }
    /// <summary>
    /// 攻击
    /// </summary>
    public int Attack { get; private set; }
    /// <summary>
    /// 防御
    /// </summary>
    public int Defense { get; private set; }
    /// <summary>
    /// 生命
    /// </summary>
    public int Life { get; private set; }
    /// <summary>
    /// 速度
    /// </summary>
    public int Speed { get; private set; }
    /// <summary>
    /// 怒气
    /// </summary>
    public int Anger { get; private set; }
    /// <summary>
    /// 增伤
    /// </summary>
    public int DamageIncrease { get; private set; }
    /// <summary>
    /// 减伤
    /// </summary>
    public int DamageReduce { get; private set; }
    /// <summary>
    /// 破甲
    /// </summary>
    public int BreakArmor { get; private set; }
    /// <summary>
    /// 破甲抵抗
    /// </summary>
    public int BreakArmorResistance { get; private set; }
    /// <summary>
    /// 暴击
    /// </summary>
    public int Crit { get; private set; }
    /// <summary>
    /// 暴击效果
    /// </summary>
    public int CritEffect { get; private set; }
    /// <summary>
    /// 格挡
    /// </summary>
    public int Parry { get; private set; }
    /// <summary>
    /// 精准
    /// </summary>
    public int Accurate { get; private set; }
    /// <summary>
    /// 暴击抵抗
    /// </summary>
    public int CritResistance { get; private set; }
    /// <summary>
    /// 爆伤抵抗
    /// </summary>
    public int CritDamageResistance { get; private set; }
    /// <summary>
    /// 技能伤害增加
    /// </summary>
    public int SkillDamageIncrease { get; private set; }
    /// <summary>
    /// 控制命中
    /// </summary>
    public int ControlAccurate { get; private set; }
    /// <summary>
    /// 免控<br/>
    /// </summary>
    public int ControlResistance { get; private set; }

    public const int __ID__ = 273783106;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "ShowInBag:" + ShowInBag + ","
        + "Quality:" + Quality + ","
        + "Camp:" + Camp + ","
        + "Location:" + Location + ","
        + "BattleImage:" + BattleImage + ","
        + "BattleBase:" + BattleBase + ","
        + "SmallCard:" + SmallCard + ","
        + "SmallAvatar:" + SmallAvatar + ","
        + "DebutImage:" + DebutImage + ","
        + "DebutEffect:" + DebutEffect + ","
        + "Skill1:" + Skill1 + ","
        + "Skill2:" + Skill2 + ","
        + "Skill3:" + Skill3 + ","
        + "Skill4:" + Skill4 + ","
        + "Skill5:" + Skill5 + ","
        + "Equip1:" + Equip1 + ","
        + "Equip2:" + Equip2 + ","
        + "Equip3:" + Equip3 + ","
        + "Equip4:" + Equip4 + ","
        + "ChipId:" + ChipId + ","
        + "SplitChip:" + SplitChip + ","
        + "SynthesisChip:" + SynthesisChip + ","
        + "Attack:" + Attack + ","
        + "Defense:" + Defense + ","
        + "Life:" + Life + ","
        + "Speed:" + Speed + ","
        + "Anger:" + Anger + ","
        + "DamageIncrease:" + DamageIncrease + ","
        + "DamageReduce:" + DamageReduce + ","
        + "BreakArmor:" + BreakArmor + ","
        + "BreakArmorResistance:" + BreakArmorResistance + ","
        + "Crit:" + Crit + ","
        + "CritEffect:" + CritEffect + ","
        + "Parry:" + Parry + ","
        + "Accurate:" + Accurate + ","
        + "CritResistance:" + CritResistance + ","
        + "CritDamageResistance:" + CritDamageResistance + ","
        + "SkillDamageIncrease:" + SkillDamageIncrease + ","
        + "ControlAccurate:" + ControlAccurate + ","
        + "ControlResistance:" + ControlResistance + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}